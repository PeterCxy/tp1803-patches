From d5207b70a5f704eb9bb3cf34ae5fddbc2cda1a3d Mon Sep 17 00:00:00 2001
From: Kuba Wojciechowski <nullbytepl@gmail.com>
Date: Thu, 17 Sep 2020 23:42:16 +0300
Subject: [PATCH] techpack: changes for tp1803

* based on nx627j techpack and guessing
* include aw87318 amp driver and Quaternary MI2S Playback handling

Signed-off-by: Kuba Wojciechowski <nullbytepl@gmail.com>
Change-Id: I9dee98a7c91e6e8b2b77753f2726c855e92dfb06
---
 asoc/sm8150.c | 108 ++++++++++++++++++++++++++++++++++++++++++++------
 1 file changed, 96 insertions(+), 12 deletions(-)

diff --git a/asoc/sm8150.c b/asoc/sm8150.c
index 71d1204c..8f749918 100644
--- a/asoc/sm8150.c
+++ b/asoc/sm8150.c
@@ -609,19 +609,22 @@ static SOC_ENUM_SINGLE_EXT_DECL(aux_pcm_rx_format, bit_format_text);
 static SOC_ENUM_SINGLE_EXT_DECL(aux_pcm_tx_format, bit_format_text);
 static SOC_ENUM_SINGLE_EXT_DECL(hifi_function, hifi_text);
 
+static int external_pa_control_gpio = -1;
+static int external_pa_power_ctrl = 9;
+
 static struct platform_device *spdev;
 
 static int msm_hifi_control;
 static bool is_initial_boot;
 static bool codec_reg_done;
-static struct snd_soc_aux_dev *msm_aux_dev;
-static struct snd_soc_codec_conf *msm_codec_conf;
+/*static struct snd_soc_aux_dev *msm_aux_dev;
+static struct snd_soc_codec_conf *msm_codec_conf;*/
 static struct msm_asoc_wcd93xx_codec msm_codec_fn;
 
 static void *def_wcd_mbhc_cal(void);
 static int msm_snd_enable_codec_ext_clk(struct snd_soc_codec *codec,
 					int enable, bool dapm);
-static int msm_wsa881x_init(struct snd_soc_component *component);
+/*static int msm_wsa881x_init(struct snd_soc_component *component);*/
 
 /*
  * Need to report LINEIN
@@ -3379,6 +3382,7 @@ static const struct snd_soc_dapm_widget msm_dapm_widgets_tavil[] = {
 	SND_SOC_DAPM_SPK("hifi amp", msm_hifi_ctrl_event),
 	SND_SOC_DAPM_MIC("Handset Mic", NULL),
 	SND_SOC_DAPM_MIC("Headset Mic", NULL),
+	SND_SOC_DAPM_MIC("Secondary Mic", NULL),
 	SND_SOC_DAPM_MIC("ANCRight Headset Mic", NULL),
 	SND_SOC_DAPM_MIC("ANCLeft Headset Mic", NULL),
 	SND_SOC_DAPM_MIC("Analog Mic5", NULL),
@@ -4146,6 +4150,7 @@ static int msm_audrx_init(struct snd_soc_pcm_runtime *rtd)
 	}
 
 	snd_soc_dapm_ignore_suspend(dapm, "Handset Mic");
+	snd_soc_dapm_ignore_suspend(dapm, "Secondary Mic");
 	snd_soc_dapm_ignore_suspend(dapm, "Digital Mic0");
 	snd_soc_dapm_ignore_suspend(dapm, "Digital Mic1");
 	snd_soc_dapm_ignore_suspend(dapm, "Digital Mic2");
@@ -5005,10 +5010,10 @@ static int msm_mi2s_snd_startup(struct snd_pcm_substream *substream)
 	struct snd_soc_dai *cpu_dai = rtd->cpu_dai;
 	int index = cpu_dai->id;
 	unsigned int fmt = SND_SOC_DAIFMT_CBS_CFS;
-	struct snd_soc_card *card = rtd->card;
+	/*struct snd_soc_card *card = rtd->card;
 	struct msm_asoc_mach_data *pdata = snd_soc_card_get_drvdata(card);
 	struct msm_pinctrl_info *pinctrl_info = &pdata->pinctrl_info;
-	int ret_pinctrl = 0;
+	int ret_pinctrl = 0;*/
 
 	dev_dbg(rtd->card->dev,
 		"%s: substream = %s  stream = %d, dai name %s, dai ID %d\n",
@@ -5048,13 +5053,13 @@ static int msm_mi2s_snd_startup(struct snd_pcm_substream *substream)
 				__func__, index, ret);
 			goto clk_off;
 		}
-		if (index == QUAT_MI2S) {
+		/*if (index == QUAT_MI2S) {
 			ret_pinctrl = msm_set_pinctrl(pinctrl_info,
 						      STATE_MI2S_ACTIVE);
 			if (ret_pinctrl)
 				pr_err("%s: MI2S TLMM pinctrl set failed with %d\n",
 					__func__, ret_pinctrl);
-		}
+		}*/
 	}
 clk_off:
 	if (ret < 0)
@@ -5072,10 +5077,10 @@ static void msm_mi2s_snd_shutdown(struct snd_pcm_substream *substream)
 	int ret;
 	struct snd_soc_pcm_runtime *rtd = substream->private_data;
 	int index = rtd->cpu_dai->id;
-	struct snd_soc_card *card = rtd->card;
+	/*struct snd_soc_card *card = rtd->card;
 	struct msm_asoc_mach_data *pdata = snd_soc_card_get_drvdata(card);
 	struct msm_pinctrl_info *pinctrl_info = &pdata->pinctrl_info;
-	int ret_pinctrl = 0;
+	int ret_pinctrl = 0;*/
 
 	pr_debug("%s(): substream = %s  stream = %d\n", __func__,
 		 substream->name, substream->stream);
@@ -5090,13 +5095,13 @@ static void msm_mi2s_snd_shutdown(struct snd_pcm_substream *substream)
 		if (ret < 0)
 			pr_err("%s:clock disable failed for MI2S (%d); ret=%d\n",
 				__func__, index, ret);
-		if (index == QUAT_MI2S) {
+		/*if (index == QUAT_MI2S) {
 			ret_pinctrl = msm_set_pinctrl(pinctrl_info,
 						      STATE_DISABLE);
 			if (ret_pinctrl)
 				pr_err("%s: MI2S TLMM pinctrl set failed with %d\n",
 					__func__, ret_pinctrl);
-		}
+		}*/
 	}
 	mutex_unlock(&mi2s_intf_conf[index].lock);
 }
@@ -5688,6 +5693,22 @@ static struct snd_soc_dai_link msm_common_dai_links[] = {
 		.codec_dai_name = "snd-soc-dummy-dai",
 		.codec_name = "snd-soc-dummy",
 	},
+	{
+		.name = "QUAT_MI2S Hostless",
+		.stream_name = "QUAT_MI2S Hostless",
+		.cpu_dai_name = "QUAT_MI2S_RX_HOSTLESS",
+		.platform_name = "msm-pcm-hostless",
+		.dynamic = 1,
+		.dpcm_playback = 1,
+		.trigger = {SND_SOC_DPCM_TRIGGER_POST,
+			    SND_SOC_DPCM_TRIGGER_POST},
+		.no_host_mode = SND_SOC_DAI_LINK_NO_HOST,
+		.ignore_suspend = 1,
+		 /* this dailink has playback support */
+		.ignore_pmdown_time = 1,
+		.codec_dai_name = "snd-soc-dummy-dai",
+		.codec_name = "snd-soc-dummy",
+	},
 };
 
 static struct snd_soc_dai_link msm_pahu_fe_dai_links[] = {
@@ -7316,6 +7337,58 @@ static struct snd_soc_card *populate_snd_card_dailinks(struct device *dev)
 	return card;
 }
 
+bool aw8736_ext_spk_power_amp_on(int value)
+{
+        int curr = 0;
+        int count = 0;
+        int latch = 0;
+        pr_debug("%s value = %d, gpio = %d\n", __func__, value, external_pa_control_gpio);
+        if (!gpio_is_valid(external_pa_control_gpio)) {
+                pr_err("%s: Invalid gpio: %d\n", __func__, external_pa_control_gpio);
+                return false;
+        }
+        curr = gpio_get_value_cansleep(external_pa_control_gpio);
+        pr_debug("%s: external_pa_control_gpio current value %d\n", __func__, curr);
+        if (curr != value){
+                latch = value;
+                if (value) {
+                        for (count=0; count < external_pa_power_ctrl; count++) {
+                                gpio_direction_output(external_pa_control_gpio, latch);
+                                latch = !latch;
+                        }
+                }
+                else {
+                        gpio_direction_output(external_pa_control_gpio, value);
+                }
+        }
+        curr = gpio_get_value_cansleep(external_pa_control_gpio);
+        pr_debug("%s: external_pa_control_gpio current finish value %d\n", __func__, curr);
+        return true;
+}
+EXPORT_SYMBOL(aw8736_ext_spk_power_amp_on);
+
+int aw_ext_pa_init(struct platform_device *pdev, struct msm_asoc_mach_data *pdata)
+{
+	external_pa_control_gpio = of_get_named_gpio(pdev->dev.of_node,
+                    "qcom,cdc-ext-amp-gpios", 0);
+	dev_err(&pdev->dev,"audio------- property %s in node %s not found %d\n",
+                    "qcom,cdc-ext-amp-gpios", pdev->dev.of_node->full_name,
+                    external_pa_control_gpio);
+	if(external_pa_control_gpio < 0) {
+        	dev_err(&pdev->dev,"audio property %s in node %s not found %d\n",
+                    "qcom,cdc-ext-amp-gpios", pdev->dev.of_node->full_name,
+                    external_pa_control_gpio);
+    }
+    if (gpio_request(external_pa_control_gpio, "ext_pa_ctrl_pin")) {
+                pr_err("%s: ext pa control gpio request failed\n", __func__);
+    }
+    aw8736_ext_spk_power_amp_on(0);
+    return 0;
+
+}
+EXPORT_SYMBOL(aw_ext_pa_init);
+
+#if 0
 static int msm_wsa881x_init(struct snd_soc_component *component)
 {
 	u8 spkleft_ports[WSA881X_MAX_SWR_PORTS] = {100, 101, 102, 106};
@@ -7555,6 +7628,7 @@ err_free_dev_info:
 err:
 	return ret;
 }
+#endif
 
 static void msm_i2s_auxpcm_init(struct platform_device *pdev)
 {
@@ -7637,9 +7711,17 @@ static int msm_asoc_machine_probe(struct platform_device *pdev)
 		ret = -EPROBE_DEFER;
 		goto err;
 	}
-	ret = msm_init_wsa_dev(pdev, card);
+	/*ret = msm_init_wsa_dev(pdev, card);
 	if (ret)
+		goto err;*/
+
+	ret = aw_ext_pa_init(pdev, pdata);
+	if (ret) {
+		dev_err(&pdev->dev, "aw_ext_pa_init failed (%d)\n",	ret);
 		goto err;
+	}
+	//enable aw8736
+	aw8736_ext_spk_power_amp_on(1);
 
 	ret = devm_snd_soc_register_card(&pdev->dev, card);
 	if (ret == -EPROBE_DEFER) {
@@ -7756,6 +7838,8 @@ static int msm_asoc_machine_remove(struct platform_device *pdev)
 	audio_notifier_deregister("sm8150");
 	msm_i2s_auxpcm_deinit();
 
+	aw8736_ext_spk_power_amp_on(0);
+
 	msm_release_pinctrl(pdev);
 	return 0;
 }
-- 
2.28.0

